lua_shared_dict data 1m;

server {
  listen       80;
  server_name  localhost;

  location / {
    add_header Cache-Control "no-cache, no-store";
    expires off;

    resolver 10.0.0.2;
    set $upstream '';
    access_by_lua_block {
      ngx.var.upstream = ngx.shared.data:get('to')
    }

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass http://$upstream;
  }

  # e.g., docker exec -ti proxy curl http://localhost/___?h=gpu.cloud9:8080
  location /___ {
    allow 127.0.0.1;
    deny all;

    default_type 'text/plain';
    content_by_lua_block {
      ngx.shared.data:set('to', ngx.var.arg_h);
      ngx.say(ngx.shared.data:get('to'));
    }
  }
}
